# Rime schema settings
# encoding: utf-8

schema:
  schema_id: yuhao
  name: 宇浩·繁简通
  version: 20230312
  author:
    - 發明人 朱宇浩 <https://zhuyuhao.com/yuhao/>
    - Rime方案 forFudan
    - 官方QQ群 735728797
  description: |
    默認設定：
    - 常用字前置，不屏蔽生僻字。
    - 關閉輸入預測。
    - 不顯示拆分提示，通過 / 鍵 或 Control+Shift+C 開啓。
    - 只顯示五個候選項，橫排候選欄。
    - Z 鍵反查拼音
    - 按"help"或"zzzz"或"bang"提示快捷鍵和官方網站。
  dependencies:
    - pinyin_simp

switches:
  - options:
      - yuhao_char_only
      - yuhao_char_first
      - cjk
    states: [只出常用字, 常用字前置, 全字集原排序]
    reset: 1
    # Control+Shift+O: 只出常用字
    # Control+Shift+I: 常用字前置
  - name: yuhao_single_char_only_for_full_code
    states: ["字詞同出", "全碼出單"]
    reset: 0
    # Control+Shift+D
  - name: yuhao_postpone_full_code
    reset: 1
    states: [原始排序, 全碼後置]
  - name: chaifen
    # Control+Shift+H
    states: ["无拆分", "有拆分"]
    reset: 0
    # Control+Shift+C
  - name: traditionalization
    states: [简保持, 简转繁]
    reset: 0
    # Control+Shift+F
  - name: simplification
    reset: 0
    states: [繁保持, 繁转简]
    # Control+Shift+J
  - name: ascii_punct
    states: [。，, ．，]
    reset: 0
  - name: ascii_mode
    states: [中文, 西文]
    reset: 0
  - name: full_shape
    states: ["半角", "全角"]
    reset: 0

menu:
  page_size: 5

engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - "affix_segmentor@zaoci" # 用户造詞
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - reverse_lookup_translator
    - table_translator@fixed
    - table_translator
    - lua_translator@yuhao_helper # 幫助文檔
    - "table_translator@zaoci" # 用户造詞
  filters:
    - lua_filter@yuhao_single_char_only_for_full_code
    - lua_filter@yuhao_postpone_full_code
    - lua_filter@yuhao_char_first
    - lua_filter@yuhao_char_only
    - simplifier@traditionalize
    - simplifier@simplify
    - simplifier@chaifen
    - uniquifier

yuhao_char_first:
  tags: [abc]

yuhao_char_only:
  tags: [abc]

traditionalize:
  tags: [abc, reverse_lookup]
  option_name: traditionalization
  opencc_config: s2t.json
  tips: all
  comment_format:
    - xform/^/〔/
    - xform/$/〕/

simplify:
  tags: [abc, reverse_lookup]
  option_name: simplification
  opencc_config: t2s.json
  tips: all
  comment_format:
    - xform/^/〔/
    - xform/$/〕/

chaifen:
  opencc_config: yuhao_chaifen.json
  option_name: chaifen
  show_in_comment: true
  tags: [abc, reverse_lookup]
  tips: char

yuhao_postpone_full_code:
  tags: [abc]
  lua:
    max_index: 5 # 最大后置位置，默认为 4

schema_name:
  code: yuhao

speller:
  alphabet: zyxwvutsrqponmlkjihgfedcba
  initials: zyxwvutsrqponmlkjihgfedcba
  delimiter: "`"
  max_code_length: 4
  auto_select: true
  algebra:
    - "derive/^([a-y])[a-y]([a-y]*)$/$1z$2/" # Az AzC AzCD
    - "derive/^([a-y]+)[a-y]([a-y]*)$/$1z$2/" # ABz ABzD ABCz AzC AzCD
    - "derive/^([a-y]+)[a-y]$/$1z/" # ABz ABCz
    - "derive/^([a-y]+)[a-y]{2}$/$1zz/" # ABzz Azz
    - "derive/^([a-y])[a-y]{2}([a-y])$/$1zz$2/" # AzzD
    - "derive/^([a-y])[a-y]{3}$/$1zzz/" # Azzz
    - "derive/^([a-y])[a-y]([a-y])[a-y]$/$1z$2z/" # AzCz

translator:
  dictionary: yuhao
  prism: yuhao
  db_class: tabledb
  # enable_charset_filter: true
  enable_completion: false
  enable_sentence: false
  enable_user_dict: false
  enable_encoder: true
  encode_commit_history: false # 对连续上屏的词自动成词
  max_phrase_length: 4 # 自动成词的最大词长
  preedit_format:
    - 'xform/^([a-y]*)$/$1\t〔\U$1\E〕/'
    - "xlit|ABCDEFGHIJKLMNOPQRSTUVWXY|扌糸女石亻木王土氵日虫口目足宀疒竹犭艹钅言厶月彐心|"
  comment_format:
    - 'xform/^~/ /'
  disable_user_dict_for_patterns:
    - "^z.*$"

# abc_segmentor:
#   extra_tags:
#     - reverse_lookup

zaoci:
  __include: /translator
  initial_quality: 10
  enable_sentence: true
  enable_user_dict: true
  prefix: '`'
  tips: "〔用户造詞〕"
  tag: zaoci

# 固定词库词的权重，防止自动调频
fixed:
  __include: translator
  enable_user_dict: false
  enable_sentence: false
  initial_quality: 1000000

reverse_lookup:
  dictionary: pinyin_simp
  prefix: "z"
  tips: 〔全拼反查〕
  closing_tips: 〔反查关闭〕
  preedit_format:
    - xform/([nl])v/$1ü/
    - xform/([nl])ue/$1üe/
    - xform/([jqxy])v/$1u/

punctuator:
  import_preset: default
  half_shape:
    "%": "%"
    "*": "*"
    "\\": "、"
    "[": "「"
    "]": "」"
    "{": "『"
    "}": "』"
    "/": "/"
    "|": "|"

key_binder:
  import_preset: default
  bindings:
    - { when: always, accept: "Control+period", toggle: ascii_punct }
    - { when: always, accept: "Control+Shift+J", toggle: simplification }
    - { when: always, accept: "Control+Shift+F", toggle: traditionalization }
    - { when: always, accept: "Control+Shift+O", toggle: yuhao_char_only } # 常用詞過濾
    - { when: always, accept: "Control+Shift+I", toggle: yuhao_char_first } # 常用詞前置
    - { when: has_menu, accept: "0", toggle: yuhao_char_only } # 常用詞過濾
    - {
        when: always,
        accept: "Control+Shift+D",
        toggle: yuhao_single_char_only_for_full_code,
      } # 全码出单
    - { when: always, accept: "Control+Shift+C", toggle: chaifen } # 拆分
    - { when: has_menu, accept: "/", toggle: chaifen } # 拆分
    # - { when: always, accept: "Control+Shift+G", toggle: guji } # 反查
    - {
        when: always,
        accept: "Control+Shift+H",
        toggle: yuhao_postpone_full_code,
      } # 全碼後置
    - { when: has_menu, accept: semicolon, send: 2 } # 分号次选
    - { when: has_menu, accept: apostrophe, send: 3 } # 引号三选
    - { when: has_menu, accept: Tab, send: 4 } # 製表符四选

recognizer:
  import_preset: default
  patterns:
    uppercase: "^(?![`;]).*[A-Z][-_+.'0-9A-Za-z]*$"
    reverse_lookup: "^z([a-z]+?)*$"
    zaoci: "^[a-y]*`[a-y`]*$"

style:
  horizontal: true
  inline_preedit: true